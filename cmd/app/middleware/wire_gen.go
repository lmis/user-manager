// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package middleware

import (
	"github.com/gin-gonic/gin"
	"user-manager/cmd/app/injector"
	"user-manager/repository"
	"user-manager/service"
)

// Injectors from wire.go:

func InitializeCsrfMiddleware(c *gin.Context) *CsrfMiddleware {
	config := injector.ProvideConfig()
	csrfMiddleware := ProvideCsrfMiddleware(c, config)
	return csrfMiddleware
}

func InitializeDatabaseMiddleware(c *gin.Context) *DatabaseMiddleware {
	db := injector.ProvideDatabase()
	log := injector.ProvideLog(c)
	databaseMiddleware := ProvideDatabaseMiddleware(c, db, log)
	return databaseMiddleware
}

func InitializeExtractLoginSessionMiddleware(c *gin.Context) *ExtractLoginSessionMiddleware {
	tx := injector.ProvideTx(c)
	sessionRepository := repository.ProvideSessionRepository(tx)
	sessionCookieService := service.ProvideSessionCookieService(c)
	extractLoginSessionMiddleware := ProvideExtractLoginSessionMiddleware(c, sessionRepository, sessionCookieService)
	return extractLoginSessionMiddleware
}

func InitializeRequireRoleMiddleware(c *gin.Context) *RequireRoleMiddleware {
	securityLog := injector.ProvideSecurityLog(c)
	nullable := injector.ProvideUserSession(c)
	requireRoleMiddleware := ProvideRequireRoleMiddleware(c, securityLog, nullable)
	return requireRoleMiddleware
}

func InitializeRequireSudoModeMiddleware(c *gin.Context) *RequireSudoModeMiddleware {
	sessionCookieService := service.ProvideSessionCookieService(c)
	tx := injector.ProvideTx(c)
	sessionRepository := repository.ProvideSessionRepository(tx)
	requireSudoModeMiddleware := ProvideRequireSudoModeMiddleware(c, sessionCookieService, sessionRepository)
	return requireSudoModeMiddleware
}

func InitializeVerifiedEmailAuthorizationMiddleware(c *gin.Context) *VerifiedEmailAuthorizationMiddleware {
	nullable := injector.ProvideUserSession(c)
	securityLog := injector.ProvideSecurityLog(c)
	verifiedEmailAuthorizationMiddleware := ProvideVerifiedEmailAuthorizationMiddleware(c, nullable, securityLog)
	return verifiedEmailAuthorizationMiddleware
}
